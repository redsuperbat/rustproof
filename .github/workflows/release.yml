name: Release ðŸš€

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“¥ Checkout Repository
        uses: actions/checkout@v4

      - name: ðŸ¤– Install Clang/LLVM
        run: |
          sudo apt-get update
          sudo apt-get install clang llvm libclang-dev

      - name: ðŸ”¨ Build
        run: cargo build --release

      - name: ðŸ“¤ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rustproof-linux
          path: target/release/rustproof

  build-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    steps:
      - name: ðŸ“¥ Checkout Repository
        uses: actions/checkout@v4

      - name: ðŸ¦€ Install Rust Target
        run: rustup target add ${{ matrix.target }}


      - name: Install LLVM
        run: |
          brew install llvm
          echo "/usr/local/opt/llvm/lib" >> "$GITHUB_PATH"
          echo "/usr/local/opt/llvm/bin" >> "$GITHUB_PATH"

      - name: Set environment variables
        run: |
          echo "LIBCLANG_PATH=$(brew --prefix llvm)/lib" >> "$GITHUB_ENV"
          echo "DYLD_LIBRARY_PATH=$(brew --prefix llvm)/lib" >> "$GITHUB_ENV"

      - name: ðŸ”¨ Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: ðŸ“¦ Package
        shell: bash
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/rustproof dist/rustproof-${{ matrix.target }}

      - name: ðŸ“¤ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rustproof-${{ matrix.target }}
          path: dist/rustproof-${{ matrix.target }}*

  build-windows:
    runs-on: windows-latest
    steps:
      - name: ðŸ“¥ Checkout Repository
        uses: actions/checkout@v4

      - name: ðŸ”¨ Build
        run: cargo build --release

      - name: ðŸ“¤ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rustproof-windows
          path: target/release/rustproof.exe


  release:
    if: false
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“¥ Checkout Repository
        uses: actions/checkout@v4

      - name: ðŸ“© Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: ðŸš€ Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
